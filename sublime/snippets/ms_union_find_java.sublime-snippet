<snippet>
	<content>
class UnionFind {
  int[] id;
  int[] sz;
  public UnionFind(int n) {
    id = new int[n];
    sz = new int[n];
    for (int i = 0; i &lt; n; i++) {
      id[i] = i;
      sz[i] = 1;
    }
  }

  int find(int p) {
    int root = p;
    while (root != id[root])
      root = id[root];
    while (p != root) { // Do path compression
      int next = id[p];
      id[p] = root;
      p = next;
    }
    return root;
  }

  boolean connected(int p, int q) {
    return find(p) == find(q);
  }

  int getSize(int p) {
    return sz[find(p)];
  }

  void union(int p, int q) {
    int root1 = find(p);
    int root2 = find(q);
    if (root1 == root2) return;
    if (sz[root1] &lt; sz[root2]) {
      sz[root2] += sz[root1];
      id[root1] = root2;
    } else {
      sz[root1] += sz[root2];
      id[root2] = root1;
    }
  }

}

</content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>ms_union_find</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.java</scope>
</snippet>
